from platform import machine
from aiogram import types
from modules.config import URLCHANNEL




class Buttons:
    #–≥–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∞
    main_buttons = [
        [
            types.KeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüìå")
        ],
        [
            types.KeyboardButton(text="–î—Ä—É–≥–æ–µ‚öôÔ∏è"),
            types.KeyboardButton(text="–û –±–æ—Ç–µ‚ÑπÔ∏è")
        ]
    ]
    main_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=main_buttons)


    #–∫–ª–∞–≤–∞ —Å –¥—Ä—É–≥–æ–π –∏–Ω—Ñ–æ–π

    another_buttons = [
        [
        types.KeyboardButton(text="–°–≤—è–∑—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–ºüì°")
        ],
        [
        types.KeyboardButton(text="–í –º–µ–Ω—é‚óÄÔ∏è")
        ]
    ]
    
    another_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=another_buttons)
    #–∫–ª–∞–≤–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –º–µ–Ω—é
    
    general_buttons = [
    [  
        # types.KeyboardButton(text="–î–µ—à–µ–≤–∞—è –≤–æ–¥–∞üíß"),
        types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏üå±", request_location=True)
    ],
    # [
    #     types.KeyboardButton(text="–°–∫–∏–¥–∫–∞ –Ω–∞ –∫–æ—Ñ–µ‚òïÔ∏è"),
    #     # types.KeyboardButton(text="–ü—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–æ–≤üåç")
    # ],
        [types.KeyboardButton(text="–í –º–µ–Ω—é‚óÄÔ∏è")]
    
    ]
    
    general_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=general_buttons)
    
    check_sub_button =  [
        [
            types.InlineKeyboardButton(text="—è –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="sub")
        ]
    ]
    
    
    —Åheck_sub_keyboard = types.InlineKeyboardMarkup(inline_keyboard=check_sub_button)
    
    source_button = [
    [  
        types.KeyboardButton(text="–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–æ–¥–∞üå±")
    ],
    [
        types.KeyboardButton(text="–°–∫–∏–¥–∫–∞ –Ω–∞ –∫–æ—Ñ–µ‚òïÔ∏è"),
    ],
        [types.KeyboardButton(text="–í –º–µ–Ω—é‚óÄÔ∏è")]
    
    ]
    
    source_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=source_button)
    #–ü—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–æ–≤ –∫–ª–∞–≤–∞
    
    # reception_points = [
    # [
    #     types.KeyboardButton(text="–ü—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–∞ –º–µ—Ç–∞–ª–ª–∞üîß"),
    #     types.KeyboardButton(text="–ü—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–∞ —Å—Ç–µ–∫–ª–∞ü™û")
    # ],
    # [
    #     types.KeyboardButton(text="–ü—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–∞ –±—É–º–∞–≥–∏üìÉ")
    # ],
    # [
    #     types.KeyboardButton(text="–í –º–µ–Ω—é‚óÄÔ∏è")
    # ]
    
    # ]
    
    # reception_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=reception_points)

    place_button = [
        [
            types.InlineKeyboardButton(text="–ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ", callback_data="place")
        ]
    ]
    place_keyboard = types.InlineKeyboardMarkup(inline_keyboard=place_button)
    place_coffee_button = [
        [
            types.InlineKeyboardButton(text="–ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ", callback_data="place coffee")
        ]
    ]
    place_coffee_keyboard = types.InlineKeyboardMarkup(inline_keyboard=place_coffee_button)
    async def main_button(self, message):
        
        await message.answer(f"*–ü—Ä–∏–≤–µ—Ç\!*\n\nüçÉ–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤–æ–¥—ã, –≤–∑–∞–º–µ–Ω –Ω–∞ –≤–∞—à—É –ø–æ–º–æ—â—å –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —ç–∫–æ–ª–æ–≥–∏–∏\!", reply_markup=self.main_keyboard)

    async def none_sub(self, message):
        await message.answer(f"*–ü—Ä–∏–≤–µ—Ç\!*\nüçÉ–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤–æ–¥—ã, –≤–∑–∞–º–µ–Ω –Ω–∞ –≤–∞—à—É –ø–æ–º–æ—â—å –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —ç–∫–æ–ª–æ–≥–∏–∏\! \n\n_–î–ª—è —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –Ω–∞—à [—Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª]({URLCHANNEL})\!_\n\n–¢–∞–º –º—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –º–Ω–æ–≥–æ–µ –æ –≠–∫–æ–ª–æ–≥–∏–∏ –∏ –∫–∞–∫ –æ–Ω–∞ —É–∂–µ —Å–µ–π—á–∞—Å –º–µ–Ω—è–µ—Ç –Ω–∞—à—É –∂–∏–∑–Ω—å\!", reply_markup=self.—Åheck_sub_keyboard)

    async def another_button(self, message):
        await message.reply("–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –º–µ–Ω—é —Å –∏–Ω–æ–π –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏–µ–πüí®", reply_markup=self.another_keyboard)

    async def back_button(self, message):
        await message.reply("–ü–µ—Ä–µ—Ö–æ–∂—É –≤ –º–µ–Ω—é\.\.\.", reply_markup=self.main_keyboard)
    
    # async def reception_func(self, message):
    #     await message.reply("–í—ã–±–µ—Ä–∏ —Ç–∏–ø –≤—Ç–æ—Ä–∏—á–Ω–æ–≥–æ —Å—ã—Ä—å—è –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–∞—Ç—åüëá", reply_markup=self.reception_keyboard)
        
    async def basic_menu(self, message):
        await message.reply("–ü–µ—Ä–µ—Ö–æ–∂—É –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\.\.\.", reply_markup=self.general_keyboard)
    
    async def about_bot(self, message):
        await message.reply("–ù–µ —Å–¥–µ–ª–∞–Ω–æ")
    
    async def connection_owner(self, message):
        await message.reply("Telegram —Å–æ–∑–¥–∞—Ç–µ–ª—è \- @tea\_official")
    
    async def chip_water(self, message):
        await message.reply("–ù–µ —Å–¥–µ–ª–∞–Ω–æ")
    
    async def free_water(self, message):
        await message.reply("–°–¥–µ–ª–∞–Ω–æ –ø—Ä–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ [–¢–≤–æ—è –≤–æ–¥–∞](tvojavoda.ru)")
        
    
    async def sale_coffee(self, message):
        await message.reply("–ù–µ —Å–¥–µ–ª–∞–Ω–æ")
        

    # async def reception_metal(self, message):
    #     await message.reply("–ù–µ —Å–¥–µ–ª–∞–Ω–æ")
        
    # async def reception_paper(self, message):
    #     await message.reply("–ù–µ —Å–¥–µ–ª–∞–Ω–æ")
        
    # async def reception_glass(self, message):
    #     await message.reply("–ù–µ —Å–¥–µ–ª–∞–Ω–æ")
        
    
        
